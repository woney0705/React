----------S: Ract 환경 셋팅----------
웹팩 : 많은 자바스크립트 파일을 하나로 만들어줌

1. 터미널에서 해당 폴더 접근
2. npm init 실행 (아래 영역 값 채워줌-나머지는 Skip) 
  - package name
  - author 
  - license 

2번 실행 결과로 package.json 생성됨

3. 리액트 필요한 것들 설치  
  - npm i react react-dom  (npm 이 두개를 설치함)
     ->실행 하면 package-lock.json 생성됨
     -> package.json 에 dependencies 등록됨 

  - npm i -D webpack webpack-cli  (리액트에 필요한 웹팩 설치)  -D는 나는 개발에서만 사용해요 라는 의미
      -> package.json 에 devDependencies 설치됨

  - npm i -D @babel/core  //바벨기본적인것
  - npm i -D @babel/preset-env  //브라우저에 맞게 최신버전을 옛날문법으로 지원
  - npm i -D @babel/preset-react //jsx지원
  - npm i -D babel-loader //바벨이랑웹팩 연결

  - npm i -D react-refresh @pmmmwh/react-refresh-webpack-plugin // 이전의 hot loader개념 변경 했을시 바로 적용하게 해줌
  - npm i -D webpack-dev-server // 이전의 hot loader개념 

5. webpack.config.js 수동 생성  (sample.webpack.config.js 참조)

6. package.json 파일 수정
    "scripts": {
      "dev": "webpack server --env development"
    },
7. 실행
  - npm run dev
  
ps. create-react-app 은 위의 일을 자동화해줌

----------E: Ract 환경 셋팅----------

----------S: 기타----------
생성할 jsx 파일에 아래와 같이 불러올수 있음
const React = require('react');
const ReactDom = require('react-dom');

index.html 생성후 
<script src="./dist/app.js"> </script>

----------E: 기타----------



